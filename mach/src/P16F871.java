// Generated by sim-pic:port from mach.xtm via hapax2

import lib.mach.Bit;
import lib.mach.Instruction;
import lib.mach.Register;
import lib.mach.Op;
import lib.mach.P14;

/**
 * Generated SimPic Port of P16F871.
 */
public class P16F871
    extends lib.mach.AbstractMachine
{

    public final Register INDF = new Register(this,"INDF",0x0);
    public final Register TMR0 = new Register(this,"TMR0",0x1);
    public final Register PCL = new Register(this,"PCL",0x2);
    public final Register STATUS = new Register(this,"STATUS",0x3);
    public final Register FSR = new Register(this,"FSR",0x4);
    public final Register PORTA = new Register(this,"PORTA",0x5);
    public final Register PORTB = new Register(this,"PORTB",0x6);
    public final Register PORTC = new Register(this,"PORTC",0x7);
    public final Register PORTD = new Register(this,"PORTD",0x8);
    public final Register PORTE = new Register(this,"PORTE",0x9);
    public final Register PCLATH = new Register(this,"PCLATH",0xa);
    public final Register INTCON = new Register(this,"INTCON",0xb);
    public final Register PIR1 = new Register(this,"PIR1",0xc);
    public final Register PIR2 = new Register(this,"PIR2",0xd);
    public final Register TMR1L = new Register(this,"TMR1L",0xe);
    public final Register TMR1H = new Register(this,"TMR1H",0xf);
    public final Register T1CON = new Register(this,"T1CON",0x10);
    public final Register TMR2 = new Register(this,"TMR2",0x11);
    public final Register T2CON = new Register(this,"T2CON",0x12);
    public final Register CCPR1L = new Register(this,"CCPR1L",0x15);
    public final Register CCPR1H = new Register(this,"CCPR1H",0x16);
    public final Register CCP1CON = new Register(this,"CCP1CON",0x17);
    public final Register RCSTA = new Register(this,"RCSTA",0x18);
    public final Register TXREG = new Register(this,"TXREG",0x19);
    public final Register RCREG = new Register(this,"RCREG",0x1a);
    public final Register ADRESH = new Register(this,"ADRESH",0x1e);
    public final Register ADCON0 = new Register(this,"ADCON0",0x1f);
    public final Register OPTION_REG = new Register(this,"OPTION_REG",0x81);
    public final Register TRISA = new Register(this,"TRISA",0x85);
    public final Register TRISB = new Register(this,"TRISB",0x86);
    public final Register TRISC = new Register(this,"TRISC",0x87);
    public final Register TRISD = new Register(this,"TRISD",0x88);
    public final Register TRISE = new Register(this,"TRISE",0x89);
    public final Register PIE1 = new Register(this,"PIE1",0x8c);
    public final Register PIE2 = new Register(this,"PIE2",0x8d);
    public final Register PCON = new Register(this,"PCON",0x8e);
    public final Register PR2 = new Register(this,"PR2",0x92);
    public final Register TXSTA = new Register(this,"TXSTA",0x98);
    public final Register SPBRG = new Register(this,"SPBRG",0x99);
    public final Register ADRESL = new Register(this,"ADRESL",0x9e);
    public final Register ADCON1 = new Register(this,"ADCON1",0x9f);
    public final Register EEDATA = new Register(this,"EEDATA",0x10c);
    public final Register EEADR = new Register(this,"EEADR",0x10d);
    public final Register EEDATH = new Register(this,"EEDATH",0x10e);
    public final Register EEADRH = new Register(this,"EEADRH",0x10f);
    public final Register EECON1 = new Register(this,"EECON1",0x18c);
    public final Register EECON2 = new Register(this,"EECON2",0x18d);

    public final Bit IRP = new Bit(this,this.STATUS,"IRP",0x7);
    public final Bit RP1 = new Bit(this,this.STATUS,"RP1",0x6);
    public final Bit RP0 = new Bit(this,this.STATUS,"RP0",0x5);
    public final Bit NOT_TO = new Bit(this,this.STATUS,"NOT_TO",0x4);
    public final Bit NOT_PD = new Bit(this,this.STATUS,"NOT_PD",0x3);
    public final Bit Z = new Bit(this,this.STATUS,"Z",0x2);
    public final Bit DC = new Bit(this,this.STATUS,"DC",0x1);
    public final Bit C = new Bit(this,this.STATUS,"C",0x0);
    public final Bit NOT_RBPU = new Bit(this,this.STATUS,"NOT_RBPU",0x7);
    public final Bit INTEDG = new Bit(this,this.STATUS,"INTEDG",0x6);
    public final Bit T0CS = new Bit(this,this.STATUS,"T0CS",0x5);
    public final Bit T0SE = new Bit(this,this.STATUS,"T0SE",0x4);
    public final Bit PSA = new Bit(this,this.STATUS,"PSA",0x3);
    public final Bit PS2 = new Bit(this,this.STATUS,"PS2",0x2);
    public final Bit PS1 = new Bit(this,this.STATUS,"PS1",0x1);
    public final Bit PS0 = new Bit(this,this.STATUS,"PS0",0x0);
    public final Bit GIE = new Bit(this,this.INTCON,"GIE",0x7);
    public final Bit PEIE = new Bit(this,this.INTCON,"PEIE",0x6);
    public final Bit T0IE = new Bit(this,this.INTCON,"T0IE",0x5);
    public final Bit INTE = new Bit(this,this.INTCON,"INTE",0x4);
    public final Bit RBIE = new Bit(this,this.INTCON,"RBIE",0x3);
    public final Bit T0IF = new Bit(this,this.INTCON,"T0IF",0x2);
    public final Bit INTF = new Bit(this,this.INTCON,"INTF",0x1);
    public final Bit RBIF = new Bit(this,this.INTCON,"RBIF",0x0);
    public final Bit PSPIE = new Bit(this,this.INTCON,"PSPIE",0x7);
    public final Bit ADIE = new Bit(this,this.INTCON,"ADIE",0x6);
    public final Bit RCIE = new Bit(this,this.INTCON,"RCIE",0x5);
    public final Bit TXIE = new Bit(this,this.INTCON,"TXIE",0x4);
    public final Bit CCP1IE = new Bit(this,this.INTCON,"CCP1IE",0x2);
    public final Bit TMR2IE = new Bit(this,this.INTCON,"TMR2IE",0x1);
    public final Bit TMR1IE = new Bit(this,this.INTCON,"TMR1IE",0x0);
    public final Bit PSPIF = new Bit(this,this.INTCON,"PSPIF",0x7);
    public final Bit ADIF = new Bit(this,this.INTCON,"ADIF",0x6);
    public final Bit RCIF = new Bit(this,this.INTCON,"RCIF",0x5);
    public final Bit TXIF = new Bit(this,this.INTCON,"TXIF",0x4);
    public final Bit CCP1IF = new Bit(this,this.INTCON,"CCP1IF",0x2);
    public final Bit TMR2IF = new Bit(this,this.INTCON,"TMR2IF",0x1);
    public final Bit TMR1IF = new Bit(this,this.INTCON,"TMR1IF",0x0);
    public final Bit EEIE = new Bit(this,this.INTCON,"EEIE",0x4);
    public final Bit EEIF = new Bit(this,this.INTCON,"EEIF",0x4);
    public final Bit NOT_POR = new Bit(this,this.PCON,"NOT_POR",0x1);
    public final Bit NOT_BO = new Bit(this,this.PCON,"NOT_BO",0x0);
    public final Bit NOT_BOR = new Bit(this,this.PCON,"NOT_BOR",0x0);
    public final Bit IBF = new Bit(this,this.TRISE,"IBF",0x7);
    public final Bit OBF = new Bit(this,this.TRISE,"OBF",0x6);
    public final Bit IBOV = new Bit(this,this.TRISE,"IBOV",0x5);
    public final Bit PSPMODE = new Bit(this,this.TRISE,"PSPMODE",0x4);
    public final Bit TRISE2 = new Bit(this,this.TRISE,"TRISE2",0x2);
    public final Bit TRISE1 = new Bit(this,this.TRISE,"TRISE1",0x1);
    public final Bit TRISE0 = new Bit(this,this.TRISE,"TRISE0",0x0);
    public final Bit EEPGD = new Bit(this,this.TRISE,"EEPGD",0x7);
    public final Bit WRERR = new Bit(this,this.TRISE,"WRERR",0x3);
    public final Bit WREN = new Bit(this,this.TRISE,"WREN",0x2);
    public final Bit WR = new Bit(this,this.TRISE,"WR",0x1);
    public final Bit RD = new Bit(this,this.TRISE,"RD",0x0);
    public final Bit T1CKPS1 = new Bit(this,this.TRISE,"T1CKPS1",0x5);
    public final Bit T1CKPS0 = new Bit(this,this.TRISE,"T1CKPS0",0x4);
    public final Bit T1OSCEN = new Bit(this,this.TRISE,"T1OSCEN",0x3);
    public final Bit NOT_T1SYNC = new Bit(this,this.TRISE,"NOT_T1SYNC",0x2);
    public final Bit T1INSYNC = new Bit(this,this.TRISE,"T1INSYNC",0x2);
    public final Bit T1SYNC = new Bit(this,this.TRISE,"T1SYNC",0x2);
    public final Bit TMR1CS = new Bit(this,this.TRISE,"TMR1CS",0x1);
    public final Bit TMR1ON = new Bit(this,this.TRISE,"TMR1ON",0x0);
    public final Bit TOUTPS3 = new Bit(this,this.TRISE,"TOUTPS3",0x6);
    public final Bit TOUTPS2 = new Bit(this,this.TRISE,"TOUTPS2",0x5);
    public final Bit TOUTPS1 = new Bit(this,this.TRISE,"TOUTPS1",0x4);
    public final Bit TOUTPS0 = new Bit(this,this.TRISE,"TOUTPS0",0x3);
    public final Bit TMR2ON = new Bit(this,this.TRISE,"TMR2ON",0x2);
    public final Bit T2CKPS1 = new Bit(this,this.TRISE,"T2CKPS1",0x1);
    public final Bit T2CKPS0 = new Bit(this,this.TRISE,"T2CKPS0",0x0);
    public final Bit CCP1X = new Bit(this,this.TRISE,"CCP1X",0x5);
    public final Bit CCP1Y = new Bit(this,this.TRISE,"CCP1Y",0x4);
    public final Bit CCP1M3 = new Bit(this,this.TRISE,"CCP1M3",0x3);
    public final Bit CCP1M2 = new Bit(this,this.TRISE,"CCP1M2",0x2);
    public final Bit CCP1M1 = new Bit(this,this.TRISE,"CCP1M1",0x1);
    public final Bit CCP1M0 = new Bit(this,this.TRISE,"CCP1M0",0x0);
    public final Bit CSRC = new Bit(this,this.TXSTA,"CSRC",0x7);
    public final Bit TX9 = new Bit(this,this.TXSTA,"TX9",0x6);
    public final Bit NOT_TX8 = new Bit(this,this.TXSTA,"NOT_TX8",0x6);
    public final Bit TX8_9 = new Bit(this,this.TXSTA,"TX8_9",0x6);
    public final Bit TXEN = new Bit(this,this.TXSTA,"TXEN",0x5);
    public final Bit SYNC = new Bit(this,this.TXSTA,"SYNC",0x4);
    public final Bit BRGH = new Bit(this,this.TXSTA,"BRGH",0x2);
    public final Bit TRMT = new Bit(this,this.TXSTA,"TRMT",0x1);
    public final Bit TX9D = new Bit(this,this.TXSTA,"TX9D",0x0);
    public final Bit TXD8 = new Bit(this,this.TXSTA,"TXD8",0x0);
    public final Bit SPEN = new Bit(this,this.RCSTA,"SPEN",0x7);
    public final Bit RX9 = new Bit(this,this.RCSTA,"RX9",0x6);
    public final Bit RC9 = new Bit(this,this.RCSTA,"RC9",0x6);
    public final Bit NOT_RC8 = new Bit(this,this.RCSTA,"NOT_RC8",0x6);
    public final Bit RC8_9 = new Bit(this,this.RCSTA,"RC8_9",0x6);
    public final Bit SREN = new Bit(this,this.RCSTA,"SREN",0x5);
    public final Bit CREN = new Bit(this,this.RCSTA,"CREN",0x4);
    public final Bit ADDEN = new Bit(this,this.RCSTA,"ADDEN",0x3);
    public final Bit FERR = new Bit(this,this.RCSTA,"FERR",0x2);
    public final Bit OERR = new Bit(this,this.RCSTA,"OERR",0x1);
    public final Bit RX9D = new Bit(this,this.RCSTA,"RX9D",0x0);
    public final Bit RCD8 = new Bit(this,this.RCSTA,"RCD8",0x0);
    public final Bit ADCS1 = new Bit(this,this.RCSTA,"ADCS1",0x7);
    public final Bit ADCS0 = new Bit(this,this.RCSTA,"ADCS0",0x6);
    public final Bit CHS2 = new Bit(this,this.RCSTA,"CHS2",0x5);
    public final Bit CHS1 = new Bit(this,this.RCSTA,"CHS1",0x4);
    public final Bit CHS0 = new Bit(this,this.RCSTA,"CHS0",0x3);
    public final Bit GO = new Bit(this,this.RCSTA,"GO",0x2);
    public final Bit NOT_DONE = new Bit(this,this.RCSTA,"NOT_DONE",0x2);
    public final Bit GO_DONE = new Bit(this,this.RCSTA,"GO_DONE",0x2);
    public final Bit ADON = new Bit(this,this.RCSTA,"ADON",0x0);
    public final Bit ADFM = new Bit(this,this.RCSTA,"ADFM",0x7);
    public final Bit PCFG3 = new Bit(this,this.RCSTA,"PCFG3",0x3);
    public final Bit PCFG2 = new Bit(this,this.RCSTA,"PCFG2",0x2);
    public final Bit PCFG1 = new Bit(this,this.RCSTA,"PCFG1",0x1);
    public final Bit PCFG0 = new Bit(this,this.RCSTA,"PCFG0",0x0);
    public final Bit _CP_ALL = new Bit(this,this.RCSTA,"_CP_ALL",0xfcf);
    public final Bit _CP_OFF = new Bit(this,this.RCSTA,"_CP_OFF",0x3fff);
    public final Bit _DEBUG_ON = new Bit(this,this.RCSTA,"_DEBUG_ON",0x37ff);
    public final Bit _DEBUG_OFF = new Bit(this,this.RCSTA,"_DEBUG_OFF",0x3fff);
    public final Bit _WRT_ENABLE_ON = new Bit(this,this.RCSTA,"_WRT_ENABLE_ON",0x3fff);
    public final Bit _WRT_ENABLE_OFF = new Bit(this,this.RCSTA,"_WRT_ENABLE_OFF",0x3dff);
    public final Bit _CPD_ON = new Bit(this,this.RCSTA,"_CPD_ON",0x3eff);
    public final Bit _CPD_OFF = new Bit(this,this.RCSTA,"_CPD_OFF",0x3fff);
    public final Bit _LVP_ON = new Bit(this,this.RCSTA,"_LVP_ON",0x3fff);
    public final Bit _LVP_OFF = new Bit(this,this.RCSTA,"_LVP_OFF",0x3f7f);
    public final Bit _BODEN_ON = new Bit(this,this.RCSTA,"_BODEN_ON",0x3fff);
    public final Bit _BODEN_OFF = new Bit(this,this.RCSTA,"_BODEN_OFF",0x3fbf);
    public final Bit _PWRTE_OFF = new Bit(this,this.RCSTA,"_PWRTE_OFF",0x3fff);
    public final Bit _PWRTE_ON = new Bit(this,this.RCSTA,"_PWRTE_ON",0x3ff7);
    public final Bit _WDT_ON = new Bit(this,this.RCSTA,"_WDT_ON",0x3fff);
    public final Bit _WDT_OFF = new Bit(this,this.RCSTA,"_WDT_OFF",0x3ffb);
    public final Bit _LP_OSC = new Bit(this,this.RCSTA,"_LP_OSC",0x3ffc);
    public final Bit _XT_OSC = new Bit(this,this.RCSTA,"_XT_OSC",0x3ffd);
    public final Bit _HS_OSC = new Bit(this,this.RCSTA,"_HS_OSC",0x3ffe);
    public final Bit _RC_OSC = new Bit(this,this.RCSTA,"_RC_OSC",0x3fff);


    public P16F871(){
        super();
        this.initPage(0x0,0x7ff);
        this.initConfig(0x2007,0x2007);
        this.initEedata(0x2100,0x213f);
        this.initSfr(0x0,0x1f);
        this.initSfr(0x80,0x9f);
        this.initSfr(0x100,0x10f);
        this.initSfr(0x180,0x18f);
        this.initGpr(0x20,0x6f);
        this.initGpr(0xa0,0xbf);
        this.initGpr(0x70,0x7f);
	this.initRegister(this.INDF);
	this.initRegister(this.TMR0);
	this.initRegister(this.PCL);
	this.initRegister(this.STATUS);
	this.initRegister(this.FSR);
	this.initRegister(this.PORTA);
	this.initRegister(this.PORTB);
	this.initRegister(this.PORTC);
	this.initRegister(this.PORTD);
	this.initRegister(this.PORTE);
	this.initRegister(this.PCLATH);
	this.initRegister(this.INTCON);
	this.initRegister(this.PIR1);
	this.initRegister(this.PIR2);
	this.initRegister(this.TMR1L);
	this.initRegister(this.TMR1H);
	this.initRegister(this.T1CON);
	this.initRegister(this.TMR2);
	this.initRegister(this.T2CON);
	this.initRegister(this.CCPR1L);
	this.initRegister(this.CCPR1H);
	this.initRegister(this.CCP1CON);
	this.initRegister(this.RCSTA);
	this.initRegister(this.TXREG);
	this.initRegister(this.RCREG);
	this.initRegister(this.ADRESH);
	this.initRegister(this.ADCON0);
	this.initRegister(this.OPTION_REG);
	this.initRegister(this.TRISA);
	this.initRegister(this.TRISB);
	this.initRegister(this.TRISC);
	this.initRegister(this.TRISD);
	this.initRegister(this.TRISE);
	this.initRegister(this.PIE1);
	this.initRegister(this.PIE2);
	this.initRegister(this.PCON);
	this.initRegister(this.PR2);
	this.initRegister(this.TXSTA);
	this.initRegister(this.SPBRG);
	this.initRegister(this.ADRESL);
	this.initRegister(this.ADCON1);
	this.initRegister(this.EEDATA);
	this.initRegister(this.EEADR);
	this.initRegister(this.EEDATH);
	this.initRegister(this.EEADRH);
	this.initRegister(this.EECON1);
	this.initRegister(this.EECON2);
	this.initBit(this.IRP);
	this.initBit(this.RP1);
	this.initBit(this.RP0);
	this.initBit(this.NOT_TO);
	this.initBit(this.NOT_PD);
	this.initBit(this.Z);
	this.initBit(this.DC);
	this.initBit(this.C);
	this.initBit(this.NOT_RBPU);
	this.initBit(this.INTEDG);
	this.initBit(this.T0CS);
	this.initBit(this.T0SE);
	this.initBit(this.PSA);
	this.initBit(this.PS2);
	this.initBit(this.PS1);
	this.initBit(this.PS0);
	this.initBit(this.GIE);
	this.initBit(this.PEIE);
	this.initBit(this.T0IE);
	this.initBit(this.INTE);
	this.initBit(this.RBIE);
	this.initBit(this.T0IF);
	this.initBit(this.INTF);
	this.initBit(this.RBIF);
	this.initBit(this.PSPIE);
	this.initBit(this.ADIE);
	this.initBit(this.RCIE);
	this.initBit(this.TXIE);
	this.initBit(this.CCP1IE);
	this.initBit(this.TMR2IE);
	this.initBit(this.TMR1IE);
	this.initBit(this.PSPIF);
	this.initBit(this.ADIF);
	this.initBit(this.RCIF);
	this.initBit(this.TXIF);
	this.initBit(this.CCP1IF);
	this.initBit(this.TMR2IF);
	this.initBit(this.TMR1IF);
	this.initBit(this.EEIE);
	this.initBit(this.EEIF);
	this.initBit(this.NOT_POR);
	this.initBit(this.NOT_BO);
	this.initBit(this.NOT_BOR);
	this.initBit(this.IBF);
	this.initBit(this.OBF);
	this.initBit(this.IBOV);
	this.initBit(this.PSPMODE);
	this.initBit(this.TRISE2);
	this.initBit(this.TRISE1);
	this.initBit(this.TRISE0);
	this.initBit(this.EEPGD);
	this.initBit(this.WRERR);
	this.initBit(this.WREN);
	this.initBit(this.WR);
	this.initBit(this.RD);
	this.initBit(this.T1CKPS1);
	this.initBit(this.T1CKPS0);
	this.initBit(this.T1OSCEN);
	this.initBit(this.NOT_T1SYNC);
	this.initBit(this.T1INSYNC);
	this.initBit(this.T1SYNC);
	this.initBit(this.TMR1CS);
	this.initBit(this.TMR1ON);
	this.initBit(this.TOUTPS3);
	this.initBit(this.TOUTPS2);
	this.initBit(this.TOUTPS1);
	this.initBit(this.TOUTPS0);
	this.initBit(this.TMR2ON);
	this.initBit(this.T2CKPS1);
	this.initBit(this.T2CKPS0);
	this.initBit(this.CCP1X);
	this.initBit(this.CCP1Y);
	this.initBit(this.CCP1M3);
	this.initBit(this.CCP1M2);
	this.initBit(this.CCP1M1);
	this.initBit(this.CCP1M0);
	this.initBit(this.CSRC);
	this.initBit(this.TX9);
	this.initBit(this.NOT_TX8);
	this.initBit(this.TX8_9);
	this.initBit(this.TXEN);
	this.initBit(this.SYNC);
	this.initBit(this.BRGH);
	this.initBit(this.TRMT);
	this.initBit(this.TX9D);
	this.initBit(this.TXD8);
	this.initBit(this.SPEN);
	this.initBit(this.RX9);
	this.initBit(this.RC9);
	this.initBit(this.NOT_RC8);
	this.initBit(this.RC8_9);
	this.initBit(this.SREN);
	this.initBit(this.CREN);
	this.initBit(this.ADDEN);
	this.initBit(this.FERR);
	this.initBit(this.OERR);
	this.initBit(this.RX9D);
	this.initBit(this.RCD8);
	this.initBit(this.ADCS1);
	this.initBit(this.ADCS0);
	this.initBit(this.CHS2);
	this.initBit(this.CHS1);
	this.initBit(this.CHS0);
	this.initBit(this.GO);
	this.initBit(this.NOT_DONE);
	this.initBit(this.GO_DONE);
	this.initBit(this.ADON);
	this.initBit(this.ADFM);
	this.initBit(this.PCFG3);
	this.initBit(this.PCFG2);
	this.initBit(this.PCFG1);
	this.initBit(this.PCFG0);
	this.initBit(this._CP_ALL);
	this.initBit(this._CP_OFF);
	this.initBit(this._DEBUG_ON);
	this.initBit(this._DEBUG_OFF);
	this.initBit(this._WRT_ENABLE_ON);
	this.initBit(this._WRT_ENABLE_OFF);
	this.initBit(this._CPD_ON);
	this.initBit(this._CPD_OFF);
	this.initBit(this._LVP_ON);
	this.initBit(this._LVP_OFF);
	this.initBit(this._BODEN_ON);
	this.initBit(this._BODEN_OFF);
	this.initBit(this._PWRTE_OFF);
	this.initBit(this._PWRTE_ON);
	this.initBit(this._WDT_ON);
	this.initBit(this._WDT_OFF);
	this.initBit(this._LP_OSC);
	this.initBit(this._XT_OSC);
	this.initBit(this._HS_OSC);
	this.initBit(this._RC_OSC);
    }


    public Instruction createInstruction(int addr, int opc){
        Op op = P14.For(opc);
        if (null != op)
            return new Instruction(this,op,addr,opc);
        else
            throw new IllegalArgumentException(String.format("Opcode 0x%x not found (arch P14, page address 0x%x)",opc,addr));
    }
}
