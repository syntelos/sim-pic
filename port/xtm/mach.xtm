//{{! -*-java-*- }} Generated by sim-pic:port from mach.xtm via hapax2

import lib.mach.Bit;
import lib.mach.Instruction;
import lib.mach.Register;
import lib.mach.Op;
import lib.mach.{{=arch}};

/**
 * Generated SimPic Port of {{=name}}.
 */
public class {{=name}}
    extends lib.mach.AbstractMachine
{
{{#registers}}
    public final Register {{=name}} = new Register(this,"{{=name}}",{{=value}});{{/registers}}
{{#bits}}
    public final Bit {{=name}} = new Bit(this,this.{{=section}},"{{=name}}",{{=value}});{{/bits}}


    public {{=name}}(){
        super();{{#pages}}
        this.initPage({{=start}},{{=end}});{{/pages}}{{#config}}
        this.initConfig({{=start}},{{=end}});{{/config}}{{#eedata}}
        this.initEedata({{=start}},{{=end}});{{/eedata}}{{#sfr}}
        this.initSfr({{=start}},{{=end}});{{/sfr}}{{#gpr}}
        this.initGpr({{=start}},{{=end}});{{/gpr}}
    }


    public Instruction createInstruction(int addr, int opc){
        Op op = {{=arch}}.For(opc);
        if (null != op)
            return new Instruction(this,op,addr,opc);
        else
            throw new IllegalArgumentException(String.format("0x%x",addr));
    }
}
